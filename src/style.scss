$accent-color: var(--theme-editor--acent-color, #007cba);
$subtle-grey: rgb(179, 162, 162);
$min-button-height: 44px;

html,
body {
  scroll-behavior: auto !important;
}

$focus-outline: 3px solid rgb(40, 155, 255);
.theme-editor {
  _-- {
    background-color: rgb(201, 190, 190);
  }
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 9999;
  max-height: 100vh;
  text-align: start;

  button, input {
    // Quick fix for some unwanted dark modes in demos.
    background: white;
    margin-right: 2px;
    border: 1px solid black;
    padding: 4px 7px;
    border-radius: 6px;
    font-size: 16px;
  }

  button, input:not([type=checkbox], [type=radio]), select, label:has(>[type=checkbox]) {
    min-width: $min-button-height;
    min-height: $min-button-height;
  }

  h4 {
    _-- {
      white-space: break-spaces;
    }

    font-size: 18px !important;
    margin-top: 0 !important;
    margin-bottom: 8px;
  }

  h5 {
      font-size: 16px !important;
      margin-top: 0 !important;
  }

  :focus {
    outline: $focus-outline !important;
  }
}

.theme-length-controls {
  clear: both;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

}

.theme-length-control {
  input _-- {
    margin-right: 5px;
    text-align: right;
    min-width: 40px;
    max-width: 120px;
  }
  display: inline-flex;
  > * {
    display: inline;
    flex-shrink: 2;
  }
}

.scroll-in-view {
  opacity: .7;
  &:hover {
    opacity: 1;
  }
}

.theme-editor *:not(.font-button):not(.monospace-code), .responsive-size-controls * {
  font-family: Roboto, sans-serif !important;
  color: black;
  line-height: initial !important;
}

.responsive-size-controls {
  input {
    width: 90px;
  }
}

.components-range-control__track {
  color: $accent-color;
}

// .simulating-touch-device {
//   &::-webkit-scrollbar {
//     width: 12px;
//   }

//   &::-webkit-scrollbar-track {
//     border-radius: 5px;
//     background: rgba(140, 140, 140, 0.2);
//   }

//   &::-webkit-scrollbar-thumb {
//     border-radius: 5px;
//     background: rgba(140, 140, 140, 0.6);
//   }

//   &::-webkit-scrollbar-thumb:hover {
//     background: rgba(140, 140, 140, 0.9);
//   }

//   &::-webkit-scrollbar-thumb:window-inactive {
//     background: rgba(140, 140, 140, 0.05);
//   }

// }

.force-cursor, .force-cursor * {
  cursor: help !important;
}

.responsive-frame-container {
  transform-origin: 0 0;
  //overflow: hidden;
  iframe {
    background-color: white;
  }
}

.responsive-frame-container::-webkit-scrollbar {
  color: transparent;
  background-color: transparent;
}

.responsive-frame-container::-webkit-resizer {
  background-color: $subtle-grey;
}

.responsive-screen-options {
  z-index: 2;
  list-style-type: none;
}

.server-theme-list {
  flex-shrink: 0;
}

.server-theme {
  background: white;
  text-align: center;
  font-size: 14px;
  height: 21px;
  margin-bottom: 4px;
  clear: both;

  button {
    font-size: 14px;
    padding: 2px;
  }
}

.server-theme-current _-- {
  background: rgba(246, 246, 89, 0.63);
}

.theme-editor ul {
  margin-left: 0;
  padding-left: 0;
}

.var-control li {
  list-style-type: none;
}

// CSS loaded in the editor often has hacked custom list images.
.group-list li:before {
  content: none !important;
}

.group-list, .server-theme-list {
  --theme-editor--lists-- {
    min-width: 320px;
    @media screen and (min-width: 800px) {
      min-width: 360px;
    }
  }
  padding: 0;
  // overflow-y: scroll;
  margin-bottom: 0;

  li {
    list-style-type: none;
  }

  &::-webkit-scrollbar {
    width: 9px;
  }

  &::-webkit-scrollbar-track {
    border-radius: 5px;
    background: rgba(140, 140, 140, 0.2);
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 5px;
    background: rgba(140, 140, 140, 0.4);
  }

  &::-webkit-scrollbar-thumb:hover {
    background: rgba(140, 140, 140, 0.5);
  }

  &::-webkit-scrollbar-thumb:window-inactive {
    background: rgba(140, 140, 140, 0.05);
  }
}

.theme-editor-menu {
  display: flex;
  flex-wrap: wrap;
  max-width: 100%;
}

@keyframes pulse {
	70% {
    outline-offset: 4px;
	}
}

.theme-editor-highlight {
  outline: 4px solid rgb(105, 82, 236) !important;
  outline-offset: -2px;
  animation: pulse .2s;
}

.shadow-picker {
  width: 100% !important;
  background: transparent !important;
}

.var-group {
  min-height: $min-button-height + 5px;
  background: white !important;
  border: 1px solid black !important;
  margin-bottom: 3px !important;
  border-radius: 7px !important;
  padding: 2px 7px 7px !important;

  h4, h5 {
    clear: none;
    margin-bottom: 2px;
  }
}

.var-control {
  _-- {
    background-color: #e2e2e2;
  }
  clear: both;
  min-height: 57px;
  border: 1px solid black !important;
  margin-bottom: 3px !important;
  border-radius: 7px !important;
  padding: 0 7px 7px !important;

  h5 {
    clear: none;
    margin-bottom: 2px;
  }

}

.var-control-in-theme _-- {
  background-color: #fcfafa;
}

.var-control-no-match-screen {
  opacity: .3;

  &:hover {
    opacity: .6;
  }
}

.var-control-property _-- {
  color: inherit;
  background-color: transparent;
  padding: 0 2px;
  border-radius: 4px;
}

.variable-screen-switcher {
  margin: 0 !important;
  opacity: .5;

  .var-control:hover &, .var-control:focus-within & {
    opacity: 1;
  }

  list-style-type: none;
  position: absolute;
  top: 21px;
  right: 7px;

  li {
    display: inline-block;
    margin-left: 4px;
    vertical-align: top;
  }

  button {
    background: lightgray;
    border: 1px solid darkgray;
    border-radius: 3px;
    padding: 0;
    width: 45px;
    height: 42px;
    vertical-align: center;
  }
}

.variable-screen-switcher-screen {
  display: block;
  padding: 0;
  margin: 0 auto;
  box-sizing: content-box;
  background: aquamarine;
  border: 1px solid gray;
  border-radius: 1px;
}

.usages-collapsed {
  max-height: 32px;
  max-width: 190px;
  overflow-y: hidden;
  overflow-x: hidden;
}

.usages-open {
  clear: both;
}

div[id^=font-picker] ul {
  position: static !important;
}

.usages-wrapper {
  position: relative;
  max-height: 32px;
  overflow: hidden;
}

.usages-wrapper:hover {
  overflow: visible;
}

.font-weight-control {
  display: flex;
  justify-content: space-between;
}

.render-info {
  --bg-opacity: calc(var(--current-renders, 1) / max(var(--max-tracked-renders, 1), 2));
  // Uncomment if the var breaks your IDE color picker.
  //background-color: rgba(255, 240, 17);
  background-color: rgba(255, 240, 17, var(--bg-opacity));
}

.theme-editor .history-button {
  // padding: 0 4px;
  font-size: 24px;
  min-width: 64px;
  min-height: 64px;
}

.content {
  min-height: 400px;
}
@import "css/movable";

.monospace-code {
  _-- {
    font-size: 16px;
    background: white;
    border: 1px solid gray;
    border-radius: 4px;
    padding: 4px !important;
  }

  display: inline-block;
  white-space: pre-wrap;
  font-family: monospace !important;

  .var-control-property _-- {
    margin-left: 16px;
    color: purple !important;
  }
}

// Quick and dirty way to visualize linked variables.
// The big old equal sign works well visually, but pseudo element is not properly clickable.
.var-control:not([data-nesting-level="0"]) > div:first-child:before {
  _-- {
    content: "=" !important;
    font-size: 36px;
  }
  vertical-align: top;
  float: left;
  margin-top: -10px;
}

.var-control .var-control {
  border-radius: 2px !important;
  padding: 0 !important;
  border: none !important;
  padding-bottom: 12px !important;
}

.connected-list {
  display: flex;
  flex-direction: column-reverse;

  ::marker {
    font-size: 38px;
    line-height: 20px;
    margin-right: 0;
  }


  > li {
    list-style: disc !important;
    list-style-position: inside !important;
    position: relative;
    border-radius: 8px;
    > * {
      margin-left: 12px;
    }
    margin-bottom: 0;
    padding-top: 2px;
    padding-bottom: 0;
  }

  > li:before {
    content: '';
    background: black;
    width: 3px;
    position: absolute;
    top: 0px;
    left: 4px;
    bottom: 0px;
  }

  > li:first-child:after {
    content: '';
    background: black;
    position: absolute;
    left: 4px;
    bottom: 0px;
    height: 3px;
    right: 0px;
  }

  > li:last-child:before {
    top: 24px;
  }
}

.history-actions {
  li {
    list-style-type: none;
    border: 1px dashed black;
    border-radius: 12px;
    padding: 2px;
  }

  pre {
    margin-bottom: 0;
  }
}

.history > ul > li:not(:hover) button:not(.pinned-here) {
  visibility: hidden;
}

$pin-delay: .07s;
$pin-in: 0s, $pin-delay;
$pin-out: $pin-delay, 0s;

.pin {
  display: inline-block;
  transition: rotate .1s ease-in, translate .12s;
  transition-delay: $pin-out;
}

.pinned-here .pin { 
  rotate: -45deg;
  translate: 0 9px;
  transition-delay: $pin-in;
}

.pinned-initial .pin {
  rotate: 45deg;
  translate: -22px 2px;
  transition-delay: $pin-in;
}

.pin-latest .pin {
  rotate: -90deg;
}

.pinned-latest .pin {
  rotate: -135deg;
  translate: 22px 3px;
  transition-delay: $pin-in;
}

button {
  width: auto;
  display: inline-block;
}

.svg-inspect-wrapper {
  overflow: hidden !important;
  align-self: flex-start;

  > svg {
    max-width: 100%;
  }
}

.history-open-groups {
  label {
    width: 100%;
  }
  label span {
    display: inline-block;
    text-align: center;
    padding: 8px;
    width: 95%;
    border: 1px solid grey;
  }

  input[type=checkbox] {
    display: none;
  }
}

.history-actions > li > * {
  vertical-align: top;
}

.flex-column {
  flex-direction: column !important;
}

@keyframes blink {
  0% {
    box-shadow: 0 0 0 0 rgba(124, 50, 177, 0.708)
  }
  70% {
      box-shadow: 0 0 0 10px rgba(76, 0, 130, 0.406);
  }
  100% {
      box-shadow: 0 0 0 0 rgba(76, 0, 130, 0.721);
  }

}

// I tried using `:has(> &)` nested in the `.tutorial-content` selector below,
// however it seemed to get compiled incorrectly, losing the initial `>`,
// That makes it match elements with non-direct descendants too.
// Could also be due to some SCSS language quirk.
:has(> .tutorial-content) {
  animation: .7s linear 0s infinite blink;
}

.area:has(.tutorial-content) {
  overflow: visible !important;
}

.tutorial-content {
  z-index: 1000000;
  min-width: 320px;

  :has(&) {
    // A bit aggressive, but this is a simple way to display the tutorial message outside the normal area boundaries,
    // without messing with how scrolling works.
    // Have to make sure the tutorial always uses elements that are high in the area.
    overflow: visible !important;
  }

  #drawer & {
    bottom: 100%;
    right: 0;
  }
  
  #area-left &, #area-left-inner & {
    left: 100%;
  }

  // #area-right & {
  //   right: 100%;
  // }

  // #drawer &, #area-left &, #area-left-inner &, #area-right & {
  //   bottom: 100%;
  // }
}

li[data-done] {
  margin-top: 16px;
  list-style-type: none;
}

li[data-done=false]:before {
  vertical-align: bottom;
}

li[data-done]:before {
  content: "...";
  color: grey;
  min-width: 36px;
  margin-right: 4px;
  font-size: 24px;
  font-weight: 900;
}

li[data-done=true]:before {
  content: "✓";
  color: green;
}

button:disabled {
  filter: opacity(.5);
}

.hide-important {
  visibility: hidden !important;
}

.hide-scrollbars {
  // scrollbar-gutter: stable;
  overflow-y: scroll !important;
  text-rendering: optimizeSpeed;
}

// .btn.btn {
//   --bs-btn-bg: blue;
// }

// .btn:not(:where(.foo), :is(idontexist, .test, li)) {
//   --bs-btn-bg: red;
// }

.chrome-picker {
  // Prevent selecting when dragging color marker.
  user-select: none;
}